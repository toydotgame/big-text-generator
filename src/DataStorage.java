import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

/* 
 * TODO - Charset, seperated into a String[] per line.
 * 
 * ctrl+x whole line, assume char width
 * NOTE: no spaces between chars. spaces would be spacing between parts of letters
 * ║╔═╗║║╔╗║ ║╔═╗║╚╗╔╗║║╔══╝║╔══╝║╔═╗║║║ ║║╚╗╔╝  ║║║║║╔╝║║   ║ ╚╝ ║║ ╚╗║║║╔═╗║║╔═╗║║╔═╗║║╔═╗║║╔══╝║╔╗╔╗║║║ ║║║╚╗╔╝║///║╚╗╔╝╚╗╔╝║///╚╗╚╝╔╝║╚╗╔╝║╚══╗ ║
 * ║║ ║║║╚╝╚╗║║ ╚╝ ║║║║║╚══╗║╚══╗║║ ╚╝║╚═╝║ ║║   ║║║╠╩╝ ║║   ║╔╗╔╗║║╔╗╚╝║║║ ║║║╚═╝║║║ ║║║╚═╝║║╚══╗╚╝║║╚╝║║ ║║╚╗║║╔╝///╚╗║║  ║║╔╝/// ╚╗╔╝ ╚╗╚╝╔╝  ╔╝╔╝
 * ║╚═╝║║╔═╗║║║ ╔╗ ║║║║║╔══╝║╔══╝║║╔═╗║╔═╗║ ║║ ╔╗║║║╠╦╗ ║║ ╔╗║║║║║║║║╚╗ ║║║ ║║║╔══╝║╚═╝║║╔╗╔╝╚══╗║  ║║  ║║ ║║ ║╚╝║ /// ║╚╝╔╗╚╝║ /// ╔╝╚╗  ╚╗╔╝  ╔╝╔╝ 
 * ║╔═╗║║╚═╝║║╚═╝║╔╝╚╝║║╚══╗║║   ║╚╝ ║║║ ║║╔╝╚╗║╚╝║║║║╚╗║╚═╝║║║║║║║║║ ║ ║║╚═╝║║║   ╚══╗║║║║╚╗╔══╝║  ║║  ║╚═╝║ ╚╗╔╝ /// ╚╗╔╝╚╗╔╝ ///╔╝╔╗╚╗  ║║  ╔╝ ╚═╗
 * ╚╝ ╚╝╚═══╝╚═══╝╚═══╝╚═══╝╚╝   ╚═══╝╚╝ ╚╝╚══╝╚══╝╚╝╚═╝╚═══╝╚╝╚╝╚╝╚╝ ╚═╝╚═══╝╚╝      ╚╝╚╝╚═╝╚═══╝  ╚╝  ╚═══╝  ╚╝  ///  ╚╝  ╚╝  ///╚═╝╚═╝  ╚╝  ╚════╝
 * 
 * ║╔═╗║╔╝║ ║╔═╗║║╔═╗║║║ ║║║╔══╝║╔══╝║╔═╗║║╔═╗║║╔═╗║
 * ║║║║║╚╗║ ╚╝╔╝║╚╝╔╝║║╚═╝║║╚══╗║╚══╗╚╝╔╝║║╚═╝║║╚═╝║
 * ║║║║║ ║║ ╔═╝╔╝╔╗╚╗║╚══╗║╚══╗║║╔═╗║  ║╔╝║╔═╗║╚══╗║
 * ║╚═╝║╔╝╚╗║ ╚═╗║╚═╝║   ║║╔══╝║║╚═╝║  ║║ ║╚═╝║╔══╝║
 * ╚═══╝╚══╝╚═══╝╚═══╝   ╚╝╚═══╝╚═══╝  ╚╝ ╚═══╝╚═══╝
 * 
 * 
 * ║ ║      ║ ╔═╗ ║
 * ║ ║      ╚═╝ ║ ║
 * ╚═╝╔═╗       ╚═╝
 * ╔═╗╚╗║╔═╗    ╔═╗
 * ╚═╝ ╚╝╚═╝    ╚═╝
 */

public class DataStorage {
	static String[] allowedChars = {
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z",
			"0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
			"!", ",", ".", "?", " "
		};
	static Set<String> charSet = new HashSet<>(Arrays.asList(allowedChars));
	
	static String[] bigText1 = {
			"╔═══╗", "╔══╗ ", "╔═══╗", "╔═══╗", "╔═══╗", "╔═══╗", "╔═══╗", "╔╗ ╔╗", "╔══╗", "  ╔╗", "╔╗╔═╗", "╔╗   ", "╔═╗╔═╗", "╔═╗ ╔╗", "╔═══╗", "╔═══╗",  "╔═══╗", "╔═══╗", "╔═══╗", "╔════╗", "╔╗ ╔╗", "╔╗  ╔╗", "╔╗  ╔╗  ╔╗", "╔═╗╔═╗", "╔╗  ╔╗", "╔════╗", // A-Z, pos 0-25
			"╔═══╗", " ╔╗ ", "╔═══╗", "╔═══╗", "╔╗ ╔╗", "╔═══╗", "╔═══╗", "╔═══╗", "╔═══╗", "╔═══╗", // 0-9, pos 26-35
			"╔═╗", "   ", "   ", "╔═════╗"
	};
}
